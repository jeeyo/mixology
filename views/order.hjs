<!DOCTYPE html>
<html>
  <head>
    <title>Mixology</title>
    <meta charset="utf-8">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <link rel="stylesheet" href="css/bootstrap.min.css">
    <link rel="stylesheet" href="css/fa.css">
    <style>
      html, body {
        background: white url('images/BG.jpg') no-repeat fixed left top/cover;
        overflow: hidden;
        -webkit-touch-callout: none;
        -webkit-user-select: none;
        -khtml-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
      }

      .mix-order-ingredient-btn {
        width: 80px;
        height: 80px;
      }

      .mix-order-ingredient-btn .overlay {
        width: 80px;
        height: 80px;
        margin: -1.4rem -0.8rem;
        border-radius: .25rem;
        background-color: rgba(0, 0, 0, 0.7);
        background-image: url('images/Chainlock.png');
        background-size: 80px 80px;
      }

      #nucleus {
        width: 100px;
        height: 100px;
        border-radius: 50%;
        position: absolute;
        top: 50%;
        left: 50%;
        margin-top: -50px;
        margin-left: -50px;
      }

      .orbit {
        width: 350px;
        height: 350px;
        border-radius: 50%;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        margin: auto;
        position: absolute;
        transform-style: preserve-3d;
      }

      .electron {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        margin: auto;
        position: absolute;
        animation: move1 4s linear infinite;
      }

      @keyframes move1 {
        from { transform: rotateZ(0) translateX(175px) rotateZ(0) rotateY(-70deg); }
        to { transform: rotateZ(360deg) translateX(175px) rotateZ(-360deg) rotateY(-70deg); }
      }

      @keyframes move2 {
        from { transform: rotateZ(0) translateX(175px) rotateZ(0) rotateY(-70deg); }
        to { transform: rotateZ(-360deg) translateX(175px) rotateZ(360deg) rotateY(-70deg); }
      }
    </style>
  </head>

  <body>

    <div class="container py-5 position-relative">
      <img class="d-block mx-auto" style="width: 350px;" src="images/Circle.png">
      <div class="d-block" id="nucleus">
        <img style="width: 100%; height: 100%;" src="images/Circle-R.png">
      </div>
      <div class="orbit" style="transform: rotateZ(35deg) rotateY(70deg);">
        <div class="electron" style="animation: move1 2s linear infinite;">
          <img style="width: 100%; height: 100%; transform: rotateZ(-35deg);" src="images/Circle-Y.png">
        </div>
      </div>
      <!--div class="orbit" style="transform: rotateZ(35deg) rotateY(70deg);">
        <div class="electron" style="animation: move2 4s linear infinite;">
          <img style="width: 100%; height: 100%;" src="images/Circle-Y.png">
        </div>
      </div-->
      <div class="orbit" style="transform: rotateZ(-35deg) rotateY(70deg);">
        <div class="electron" style="animation: move1 3s linear infinite;">
          <img style="width: 100%; height: 100%; transform: rotateZ(35deg);" src="images/Circle-Y.png">
        </div>
      </div>
      <!--div class="orbit" style="transform: rotateZ(-35deg) rotateY(70deg);">
        <div class="electron" style="animation: move2 4s linear infinite;">
          <img style="width: 100%; height: 100%;" src="images/Circle-Y.png">
        </div>
      </div-->
      <div class="orbit" style="transform: rotateZ(90deg) rotateY(70deg);">
        <div class="electron" style="animation: move1 4s linear infinite;">
          <img style="width: 100%; height: 100%; transform: rotateZ(-90deg);" src="images/Circle-M.png">
        </div>
      </div>
      <!--div class="orbit" style="transform: rotateZ(90deg) rotateY(70deg);">
        <div class="electron" style="animation: move2 4s linear infinite;">
          <img style="width: 100%; height: 100%;" src="images/Circle-Y.png">
        </div>
      </div-->
    </div>

    <div class="container d-flex flex-column justify-content-center align-items-center" style="width: 600px; margin-bottom: 100px;">

      <div class="container my-1 d-flex flex-row justify-content-between">
        <button class="btn btn-danger d-inline-block shadow mix-order-ingredient-btn" data-mix-order-val="Red"></button>
        <button class="btn btn-danger d-inline-block shadow mix-order-ingredient-btn" data-mix-order-val="Blue"></button>
      </div>
      
      <div class="container my-1 d-flex flex-row justify-content-between">
        <button class="btn btn-warning d-inline-block shadow mix-order-ingredient-btn disabled" data-mix-order-val="Oj"><div class="overlay"></div></button>
        <button class="btn btn-warning d-inline-block shadow mix-order-ingredient-btn disabled" data-mix-order-val="Pj"><div class="overlay"></div></button>
        <button class="btn btn-warning d-inline-block shadow mix-order-ingredient-btn disabled" data-mix-order-val="Aj"><div class="overlay"></div></button>
        <button class="btn btn-warning d-inline-block shadow mix-order-ingredient-btn disabled" data-mix-order-val="Bj"><div class="overlay"></div></button>
        <button class="btn btn-warning d-inline-block shadow mix-order-ingredient-btn disabled" data-mix-order-val="Sj"><div class="overlay"></div></button>
        <button class="btn btn-warning d-inline-block shadow mix-order-ingredient-btn disabled" data-mix-order-val="Psj"><div class="overlay"></div></button>
      </div>
      
      <div class="container my-1 d-flex flex-row justify-content-between">
        <button class="btn btn-success d-inline-block shadow mix-order-ingredient-btn disabled" data-mix-order-val="Lys"><div class="overlay"></div></button>
        <button class="btn btn-success d-inline-block shadow mix-order-ingredient-btn disabled" data-mix-order-val="Ots"><div class="overlay"></div></button>
        <button class="btn btn-success d-inline-block shadow mix-order-ingredient-btn disabled" data-mix-order-val="Vas"><div class="overlay"></div></button>
        <button class="btn btn-success d-inline-block shadow mix-order-ingredient-btn disabled" data-mix-order-val="Aps"><div class="overlay"></div></button>
        <button class="btn btn-success d-inline-block shadow mix-order-ingredient-btn disabled" data-mix-order-val="Sts"><div class="overlay"></div></button>
        <button class="btn btn-success d-inline-block shadow mix-order-ingredient-btn disabled" data-mix-order-val="Mb"><div class="overlay"></div></button>
      </div>
    </div>

    <nav class="navbar navbar-light fixed-bottom bg-transparent d-flex flex-row">
      <button class="btn" type="button" id="mix-conn-status-btn">
        <span class="fa fa-redo"></span> Refresh
      </button>
      <button class="btn btn-primary" id="mix-order-random-btn">
        <i class="fas fa-random"></i> Random
      </button>
      <button class="btn btn-info disabled" id="mix-order-order-btn" disabled="disabled">
        <i class="fas fa-cocktail"></i> Order
      </button>
    </nav>

    <script src="js/jquery-3.0.0.slim.min.js"></script>
    <script src="js/bootstrap.bundle.min.js"></script>
    <script src="js/socket.io.js"></script>
    <script>

      const FORMULAS = [
        ['Red', 'Aj', 'Bj', 'Lj', 'Mb', 'Ss'],
        ['Blue', 'Psj', 'Sj', 'Lj', 'Lys', 'Ss'],
        ['Red', 'Oj', 'Pj', 'Lj', 'Vas', 'Ss'],
        ['Blue', 'Psj', 'Bj', 'Lj', 'Ots', 'Ss'],
        ['Red', 'Sj', 'Oj', 'Lj', 'Sts', 'Ss'],
        ['Blue', 'Aj', 'Pj', 'Lj', 'Aps', 'Ss'],
      ];
      const MIXTURES = ['Jazzcuzzi', 'Frisky', 'Latinos', 'Eelektross', 'Rockumantary', 'A K A Hip'];
      const COLORS = ['#CDC0DF', '#FCD6D6', '#FFCF59', '#B070AF', '#F5949E', '#FBF27E'];
      const GENRES = ['Jazz', 'Funk', 'Latin', 'Electronics', 'Rock', 'Hip-Hop'];

      const ALL_INGREDIENTS = [
        'Red', 'Blue',
        'Oj', 'Pj', 'Aj', 'Bj', 'Sj', 'Psj', 'Lj',
        'Lys', 'Ots', 'Vas', 'Aps', 'Sts', 'Mb', 'Ss',
      ];

      let my_formula = ['Lj', 'Ss'];
      let available_ingredients = ALL_INGREDIENTS;

      var socket = io('http://{{ host }}:{{ port }}/order', {
        reconnection: true,
        reconnectionDelay: 500,
        reconnectionAttempts: 10,
      });

      socket.on('connect', function() {
        console.log('WS Connected');
        $('#mix-conn-status-btn').removeClass('btn-success btn-danger');
        $('#mix-conn-status-btn').addClass('btn-success');
      });
      socket.on('disconnect', function() {
        console.log('WS Disconnected');
        $('#mix-conn-status-btn').removeClass('btn-success btn-danger');
        $('#mix-conn-status-btn').addClass('btn-danger');
      });

      $('#mix-conn-status-btn').on('click', function() {
        location.reload();
      });

      $('.mix-order-ingredient-btn').each((i, v) => {
        $(v)
          .removeClass('btn-danger btn-warning btn-success')
          .css({
            'background-color': 'transparent',
            'background-image': `url('images/${$(v).data('mix-order-val').toUpperCase()}.png')`,
            'background-size': '80px 80px',
          });
      });

      $('.mix-order-ingredient-btn').on('click', function() {

        var removing_ingredients = [];
        var ingredient = $(this).data('mix-order-val');

        if(my_formula.indexOf(ingredient) < 0)
          my_formula.push(ingredient);
        
        if(['Red', 'Blue'].indexOf(ingredient) > -1) {
          my_formula = [ingredient, 'Lj', 'Ss'];
          available_ingredients = ALL_INGREDIENTS;
          $(`.electron:eq(0) img`).attr('src', `images/Circle-Y.png`);
          $(`.electron:eq(1) img`).attr('src', `images/Circle-Y.png`);
          $(`.electron:eq(2) img`).attr('src', `images/Circle-M.png`);
        }
        
        // Sort Liquor to the first
        my_formula.slice().sort(function(a, b) { return a == 'Red' || a == 'Blue' ? -1 : b == 'Red' || b == 'Blue' ? 1 : 0; })
        .forEach((v, i) => {

          // Ignore Liquors
          if(['Red', 'Blue'].indexOf(v) > -1) {
            $(`#nucleus img`).attr('src', `images/C-${v.toUpperCase()}.png`);
            return;
          }
          // Ignore Lj and Ss
          if(['Lj', 'Ss'].indexOf(v) > -1) return;

          // The interesting ingredients will start from the 4th element
          $(`.electron:eq(${i - 3}) img`).attr('src', `images/C-${v.toUpperCase()}.png`);
        });
        
        if(my_formula.length >= 6) {
          $('#mix-order-order-btn').removeClass('disabled').removeAttr('disabled');
          var matched_index = FORMULAS.findIndex(f => JSON.stringify(f.slice().sort()) === JSON.stringify(my_formula.slice().sort()));
        }

        // Remove ingredients from non-found
        FORMULAS.forEach(f => {
          if(f.indexOf(ingredient) < 0)
            removing_ingredients = removing_ingredients.concat(f);
        });

        // Add back from found
        FORMULAS.forEach(f => {
          if(my_formula.every(m => f.indexOf(m) > -1))
            removing_ingredients = removing_ingredients.filter(m => f.indexOf(m) < 0);
        });

        // Remove itself
        removing_ingredients.push(ingredient);

        // Add liquors back
        removing_ingredients = removing_ingredients.filter(m => ['Red', 'Blue'].indexOf(m) < 0);

        available_ingredients = available_ingredients.filter(m => removing_ingredients.indexOf(m) < 0);

        $('.mix-order-ingredient-btn').removeClass('disabled').removeAttr('disabled').html('');
        $('.mix-order-ingredient-btn').each((i, v) => {
          var m = $(v).data('mix-order-val');
          if(available_ingredients.indexOf(m) < 0)
            $(v).addClass('disabled').attr('disabled', 'disabled').html('<div class="overlay"></div>');
        });
      });

      $('#mix-order-random-btn').on('click', function() {
        let matched_index = Math.floor(Math.random() * FORMULAS.length);

        socket.emit('new', { mixture: matched_index, randomized: true });

        // TO-DO: play an animation here
        setTimeout(location.reload(), 1000);
      });

      $('#mix-order-order-btn').on('click', function() {
        var matched_index = FORMULAS.findIndex(f => JSON.stringify(f.slice().sort()) === JSON.stringify(my_formula.slice().sort()));
        if(matched_index < 0) return;
        socket.emit('new', { mixture: matched_index, randomized: false });

        // TO-DO: play an animation here
        setTimeout(location.reload(), 1000);
      });
    </script>
  </body>
</html>